events {
    worker_connections 1024;
}

http {

    include      mime.types;
    default_type application/octet-stream;

    upstream friend_service {
        server friend:8085;
    }

    upstream group_service {
        server groupService:8086;
    }

    upstream connection_service {
        server connectionService:8088;
    }

    upstream media_service {
        server fileRepository:5000;
    }

    server {
        listen 80;
        server_name localhost;

        # Friend Service
        location /api/friend/ {
            proxy_pass http://friend_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin http://nginx;
        }

        # Group Service
        location /api/group/ {
            proxy_pass http://group_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin http://nginx;
        }

        # Connection Service
        location /api/connections/ {
            proxy_pass http://connection_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin http://nginx;
        }

        location /api/fileRepository/ {
            proxy_pass http://media_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin http://nginx;
        }

        # Block direct access to /fileUpload/fileUpload.html for security
        location = /fileUpload/fileUpload.html {
            return 404;
        }

        # CalendarView - NO CACHING for development - handles /fileUpload/{numeric-id} pattern
        location ~ ^/fileUpload/([0-9]+)/?$ {
            root /usr/share/nginx/html;
            try_files /fileUpload/fileUpload.html =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Custom route: /index -> serve index.html with 14-day browser caching
        location = /index {
            root /usr/share/nginx/html;
            try_files /index.html =404;
            expires 14d;
            add_header Cache-Control "public, max-age=1209600";
        }

        # Custom route: /stats -> serve analytics.html with 14-day browser caching
        location = /stats {
            root /usr/share/nginx/html;
            try_files /analytics/analytics.html =404;
            expires 14d;
            add_header Cache-Control "public, max-age=1209600";
        }

        # Static files location with 14-day browser caching
        location / {
            root /usr/share/nginx/html;
            expires 14d;
            add_header Cache-Control "public, max-age=1209600";
        }
    }
}